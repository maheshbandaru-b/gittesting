name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - qa
      - stage
  pull_request:
    branches:
      - main
      - dev
      - qa
      - stage

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        mvn clean verify sonar:sonar \
          -Dsonar.projectKey=my-project-key \
          -Dsonar.host.url=${{ secrets.SONARQUBE_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: java-artifact
        path: target/*.jar

  push_to_nexus:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: java-artifact
        path: target/

    - name: Upload to Nexus
      run: |
        curl -v -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} --upload-file target/*.jar ${{ secrets.NEXUS_URL }}/repository/maven-releases/my-app.jar

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: java-artifact
        path: target/

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t my-app:latest .
        docker tag my-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Trivy scan
      uses: aquasecurity/trivy-action@v0.0.18
      with:
        image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

  deploy_dev:
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Deploy to Kubernetes (Dev)
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG
